Longest Palindromic Substring

Given a string s, return the longest palindromic substring in s.

 

Example 1:

Input: s = "babad"
Output: "bab"
Note: "aba" is also a valid answer.
Example 2:

Input: s = "cbbd"
Output: "bb"
Example 3:

Input: s = "a"
Output: "a"
Example 4:

Input: s = "ac"
Output: "a"
 

Constraints:

1 <= s.length <= 1000
s consist of only digits and English letters (lower-case and/or upper-case),

Solution:
Python:

class Solution:
    def longestPalindrome(self, s: str) -> str:
        res=""
        length=len(s)
        def helper(left: int, right: int):
            while left>=0 and right<length and s[left]==s[right]:
                left-=1
                right+=1
            return s[left+1:right]
        for index in range(len(s)):
            res=max(helper(index,index),helper(index,index+1),res,key=len)
            
        return res
